### COMS-6998: Pract DL Sys Perf Final Project:
# Cost Effective Training for Casual Practitioners

**Group:** Ali Al-keldi and Conor Flanagan  
**Slide Deck:** [Google Drive](https://docs.google.com/presentation/d/1RB412bl672gIyrJXVMs1iijhJa7x8duf3cUQWq8UoHw/edit#slide=id.p)


## Approach 2: Parameter Server
For the parameter server approach, we followed 

## Approach 3: Hogwild!
Our Hogwild! code can be found in `hogwild.py`. The code enables easy experimenting with different models/data, as well as different configurations of how to distribute work across one or more workers/processes.

The main function are:

```
def train_model(
        model,
        train_dataloader,
        num_processes,
        epochs_per_process,
        optimizer,
        device='cpu',
        log_interval=10,  # -1 for no logs
        loss_tracker=None,
        seed=42): {...}
```
`train_model` completes the entire training process, logs accuracy on test data, and returns accumulated training losses.
```
def log_elapsed_time(
    num_processes,
    epochs_per_process,
    start,
    end): {...}
```
`log_elapsed_time` is a small helper function to log how it took to train a particular model.

```
def chart_losses(
    losses_dict,
    title='Comparing Training Losses Across Configurations'): {...}
```
`chart_losses` takes a dictionary where the keys are model labels (ex: '4 processes x 1 epoch NN') and the value are a list of accumlated loss values and generates a chart displaying the data. Optionally, a `title` can be provided.

## Hogwild! end-to-end example
For an end-to-end example, run `hogwild_example.py`:
```
python hogwild_example.py
```

In this file, we consider 3 versions of the same model:
1. 1 process, 4 epochs
2. 4 processes, 1 epoch (each)
3. 2 processes, 2 epochs (each)

We use `train_model` 3 times to train each model and evaluate their test accuracies, print their elapsed times with `log_elapsed_time`, and then chart their training losses across batches with `chart_losses`. The example chart above was generated by running `hogwild_example.py`.